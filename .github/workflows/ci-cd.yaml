# GitHub Actions Workflow for CI/CD
name: ci-cd

# Trigger this workflow on every push to the 'main' branch
on:
  push:
    branches:
      - main
  # Allow running this workflow manually
  workflow_dispatch:

# Set permissions required for pushing to GHCR
permissions:
  contents: read
  packages: write

jobs:
  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}  # Fixed comment spacing

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

    deploy-to-k8s:
    name: Deploy to Kubernetes
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    env:
      NAMESPACE: wisecow
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Skip deployment if KUBECONFIG secret missing
        if: ${{ !secrets.KUBECONFIG }}
        run: |
          echo "KUBECONFIG secret not found. Skipping deployment."
          exit 0

      - name: Set up Kubeconfig
        if: ${{ secrets.KUBECONFIG }}
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
          export KUBECONFIG="$PWD/kubeconfig.yaml"
          # Print the current K8s context (sanity check)
          kubectl config view --minify

      - name: Install and set up kubectl
        if: ${{ secrets.KUBECONFIG }}
        uses: azure/setup-kubectl@v4

      - name: Apply Kubernetes manifests
        if: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/service.yaml -n $NAMESPACE
          TEMP_DEPLOYMENT_FILE=$(mktemp)
          IMAGE_TAG="ghcr.io/${{ github.repository }}:${{ github.sha }}"
          sed "s|<IMAGE_PLACEHOLDER>|$IMAGE_TAG|g" k8s/deployment.yaml > $TEMP_DEPLOYMENT_FILE
          kubectl apply -f $TEMP_DEPLOYMENT_FILE -n $NAMESPACE
          rm $TEMP_DEPLOYMENT_FILE
          echo "Deployment rollout triggered."
