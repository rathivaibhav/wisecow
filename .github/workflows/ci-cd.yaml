# GitHub Actions Workflow for CI/CD
name: ci-cd

# Trigger this workflow on every push to the 'main' branch
on:
  push:
    branches:
      - main
  # Allow running this workflow manually
  workflow_dispatch:

# Set permissions required for pushing to GHCR
permissions:
  contents: read
  packages: write

jobs:
  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # Auto-generated

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-k8s:
    name: Deploy to Kubernetes
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    # This job only runs if the KUBECONFIG secret is set
    if: ${{ secrets.KUBECONFIG != '' }}
    env:
      NAMESPACE: wisecow # Define namespace as an env variable
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: Install and set up kubectl
        uses: azure/setup-kubectl@v4
        id: install

      - name: Apply Kubernetes manifests
        run: |
          # Apply the namespace first
          kubectl apply -f k8s/namespace.yaml

          # Apply other resources into the namespace
          kubectl apply -f k8s/service.yaml -n $NAMESPACE

          # Create a temporary deployment file for this specific SHA
          # This replaces the placeholder with the exact image tag
          TEMP_DEPLOYMENT_FILE=$(mktemp)
          IMAGE_TAG="ghcr.io/${{ github.repository }}:${{ github.sha }}"

          echo "---"
          echo "Deploying with image: $IMAGE_TAG"
          echo "---"

          sed "s|<IMAGE_PLACEHOLDER>|$IMAGE_TAG|g" k8s/deployment.yaml > $TEMP_DEPLOYMENT_FILE

          echo "Applying new deployment config:"
          cat $TEMP_DEPLOYMENT_FILE
          echo "---"

          # Apply the new deployment configuration
          kubectl apply -f $TEMP_DEPLOYMENT_FILE -n $NAMESPACE

          # Clean up temp file
          rm $TEMP_DEPLOYMENT_FILE

          echo "Deployment rollout triggered."
